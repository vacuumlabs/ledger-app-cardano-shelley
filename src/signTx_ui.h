#ifndef H_CARDANO_APP_SIGN_TX_UI
#define H_CARDANO_APP_SIGN_TX_UI

// ============================== INIT ==============================

enum {
	HANDLE_INIT_STEP_PROMPT_SIGNINGMODE = 100,
	HANDLE_INIT_STEP_DISPLAY_NETWORK_DETAILS,
	HANDLE_INIT_STEP_SCRIPT_RUNNING_WARNING,
	HANDLE_INIT_STEP_NO_COLLATERAL_WARNING,
	HANDLE_INIT_STEP_UNKNOWN_COLLATERAL_WARNING,
	HANDLE_INIT_STEP_NO_SCRIPT_DATA_HASH_WARNING,
	HANDLE_INIT_STEP_RESPOND,
	HANDLE_INIT_STEP_INVALID,
} ;

void signTx_handleInit_ui_runStep();

// ============================== AUXILIARY DATA ==============================

enum {
	HANDLE_AUX_DATA_ARBITRARY_HASH_STEP_DISPLAY = 800,
	HANDLE_AUX_DATA_ARBITRARY_HASH_STEP_RESPOND,
	HANDLE_AUX_DATA_ARBITRARY_HASH_STEP_INVALID,
};

void signTx_handleAuxDataArbitraryHash_ui_runStep();

enum {
	HANDLE_AUX_DATA_CVOTE_REGISTRATION_STEP_DISPLAY = 850,
	HANDLE_AUX_DATA_CVOTE_REGISTRATION_STEP_RESPOND,
	HANDLE_AUX_DATA_CVOTE_REGISTRATION_STEP_INVALID,
};

void signTx_handleAuxDataCVoteRegistration_ui_runStep();

// ============================== INPUTS ==============================

enum {
	HANDLE_INPUT_STEP_DISPLAY = 200,
	HANDLE_INPUT_STEP_RESPOND,
	HANDLE_INPUT_STEP_INVALID,
};

void signTx_handleInput_ui_runStep();

// ============================== FEE ==============================

enum {
	HANDLE_FEE_STEP_DISPLAY = 400,
	HANDLE_FEE_STEP_RESPOND,
	HANDLE_FEE_STEP_INVALID,
};

void signTx_handleFee_ui_runStep();

// ============================== TTL ==============================

enum {
	HANDLE_TTL_STEP_DISPLAY = 500,
	HANDLE_TTL_STEP_RESPOND,
	HANDLE_TTL_STEP_INVALID,
};

void signTx_handleTtl_ui_runStep();

// ============================== CERTIFICATES ==============================

enum {
	HANDLE_CERTIFICATE_STAKING_STEP_DISPLAY_OPERATION = 600,
	HANDLE_CERTIFICATE_STAKING_STEP_DISPLAY_STAKE_CRED,
	HANDLE_CERTIFICATE_STAKING_STEP_DISPLAY_DEPOSIT,
	HANDLE_CERTIFICATE_STAKING_STEP_CONFIRM,
	HANDLE_CERTIFICATE_STAKING_STEP_RESPOND,
	HANDLE_CERTIFICATE_STAKING_STEP_INVALID,
};
void signTx_handleCertificateStaking_ui_runStep();

enum {
	HANDLE_CERTIFICATE_VOTE_DELEGATION_STEP_DISPLAY_OPERATION = 610,
	HANDLE_CERTIFICATE_VOTE_DELEGATION_STEP_DISPLAY_STAKE_CRED,
	HANDLE_CERTIFICATE_VOTE_DELEGATION_STEP_DISPLAY_DREP,
	HANDLE_CERTIFICATE_VOTE_DELEGATION_STEP_CONFIRM,
	HANDLE_CERTIFICATE_VOTE_DELEGATION_STEP_RESPOND,
	HANDLE_CERTIFICATE_VOTE_DELEGATION_STEP_INVALID,
};
void signTx_handleCertificateVoteDeleg_ui_runStep();

enum {
	HANDLE_CERTIFICATE_COMM_AUTH_STEP_DISPLAY_OPERATION = 620,
	HANDLE_CERTIFICATE_COMM_AUTH_STEP_DISPLAY_COLD_CRED,
	HANDLE_CERTIFICATE_COMM_AUTH_STEP_DISPLAY_HOT_CRED,
	HANDLE_CERTIFICATE_COMM_AUTH_STEP_CONFIRM,
	HANDLE_CERTIFICATE_COMM_AUTH_STEP_RESPOND,
	HANDLE_CERTIFICATE_COMM_AUTH_STEP_INVALID,
};
void signTx_handleCertificateCommitteeAuth_ui_runStep();

enum {
	HANDLE_CERTIFICATE_COMM_RESIGN_STEP_DISPLAY_OPERATION = 640,
	HANDLE_CERTIFICATE_COMM_RESIGN_STEP_DISPLAY_COLD_CRED,
	HANDLE_CERTIFICATE_COMM_RESIGN_STEP_DISPLAY_ANCHOR_NULL,
	HANDLE_CERTIFICATE_COMM_RESIGN_STEP_DISPLAY_ANCHOR_URL,
	HANDLE_CERTIFICATE_COMM_RESIGN_STEP_DISPLAY_ANCHOR_HASH,
	HANDLE_CERTIFICATE_COMM_RESIGN_STEP_CONFIRM,
	HANDLE_CERTIFICATE_COMM_RESIGN_STEP_RESPOND,
	HANDLE_CERTIFICATE_COMM_RESIGN_STEP_INVALID,
};
void signTx_handleCertificateCommitteeResign_ui_runStep();

enum {
	HANDLE_CERTIFICATE_DREP_STEP_DISPLAY_OPERATION = 660,
	HANDLE_CERTIFICATE_DREP_STEP_DISPLAY_CREDENTIAL,
	HANDLE_CERTIFICATE_DREP_STEP_DISPLAY_DEPOSIT,
	HANDLE_CERTIFICATE_DREP_STEP_DISPLAY_ANCHOR_NULL,
	HANDLE_CERTIFICATE_DREP_STEP_DISPLAY_ANCHOR_URL,
	HANDLE_CERTIFICATE_DREP_STEP_DISPLAY_ANCHOR_HASH,
	HANDLE_CERTIFICATE_DREP_STEP_CONFIRM,
	HANDLE_CERTIFICATE_DREP_STEP_RESPOND,
	HANDLE_CERTIFICATE_DREP_STEP_INVALID,
};
void signTx_handleCertificateDRep_ui_runStep();

enum {
	HANDLE_CERTIFICATE_POOL_RETIREMENT_STEP_DISPLAY_OPERATION = 680,
	HANDLE_CERTIFICATE_POOL_RETIREMENT_STEP_DISPLAY_EPOCH,
	HANDLE_CERTIFICATE_POOL_RETIREMENT_STEP_CONFIRM,
	HANDLE_CERTIFICATE_POOL_RETIREMENT_STEP_RESPOND,
	HANDLE_CERTIFICATE_POOL_RETIREMENT_STEP_INVALID,
};
void signTx_handleCertificatePoolRetirement_ui_runStep();

// ============================== WITHDRAWALS ==============================

enum {
	HANDLE_WITHDRAWAL_STEP_DISPLAY_AMOUNT = 700,
	HANDLE_WITHDRAWAL_STEP_DISPLAY_PATH,
	HANDLE_WITHDRAWAL_STEP_RESPOND,
	HANDLE_WITHDRAWAL_STEP_INVALID,
};

void signTx_handleWithdrawal_ui_runStep();

// ============================== VALIDITY INTERVAL START ==============================

enum {
	HANDLE_VALIDITY_INTERVAL_START_STEP_DISPLAY = 900,
	HANDLE_VALIDITY_INTERVAL_START_STEP_RESPOND,
	HANDLE_VALIDITY_INTERVAL_START_STEP_INVALID,
};

void signTx_handleValidityInterval_ui_runStep();

// ========================= SCRIPT DATA HASH ==========================


enum {
	HANDLE_SCRIPT_DATA_HASH_STEP_DISPLAY = 1200,
	HANDLE_SCRIPT_DATA_HASH_STEP_RESPOND,
	HANDLE_SCRIPT_DATA_HASH_STEP_INVALID,
};

void signTx_handleScriptDataHash_ui_runStep();

// ========================= REQUIRED SIGNERS ===========================

enum {
	HANDLE_REQUIRED_SIGNERS_STEP_DISPLAY = 1400,
	HANDLE_REQUIRED_SIGNERS_STEP_RESPOND,
	HANDLE_REQUIRED_SIGNERS_STEP_INVALID,
};

void signTx_handleRequiredSigner_ui_runStep();

// ========================= TOTAL COLLATERAL ===========================

enum {
	HANDLE_TOTAL_COLLATERAL_STEP_DISPLAY = 1700,
	HANDLE_TOTAL_COLLATERAL_STEP_RESPOND,
	HANDLE_TOTAL_COLLATERAL_STEP_INVALID,
};

void signTx_handleTotalCollateral_ui_runStep();

// ========================= VOTING PROCEDURES ===========================

enum {
	HANDLE_VOTING_PROCEDURE_STEP_INTRO = 1900,
	HANDLE_VOTING_PROCEDURE_STEP_VOTER,
	HANDLE_VOTING_PROCEDURE_STEP_GOV_ACTION_ID_TXHASH,
	HANDLE_VOTING_PROCEDURE_STEP_GOV_ACTION_ID_INDEX,
	HANDLE_VOTING_PROCEDURE_STEP_VOTE,
	HANDLE_VOTING_PROCEDURE_STEP_ANCHOR_NULL,
	HANDLE_VOTING_PROCEDURE_STEP_ANCHOR_URL,
	HANDLE_VOTING_PROCEDURE_STEP_ANCHOR_HASH,
	HANDLE_VOTING_PROCEDURE_STEP_CONFIRM,
	HANDLE_VOTING_PROCEDURE_STEP_RESPOND,
	HANDLE_VOTING_PROCEDURE_STEP_INVALID,
};

void signTx_handleVotingProcedure_ui_runStep();

// ============================== TREASURY ==============================

enum {
	HANDLE_TREASURY_STEP_DISPLAY = 2100,
	HANDLE_TREASURY_STEP_RESPOND,
	HANDLE_TREASURY_STEP_INVALID,
};

void signTx_handleTreasury_ui_runStep();

// ============================== DONATION ==============================

enum {
	HANDLE_DONATION_STEP_DISPLAY = 2200,
	HANDLE_DONATION_STEP_RESPOND,
	HANDLE_DONATION_STEP_INVALID,
};

void signTx_handleDonation_ui_runStep();

// ============================== CONFIRM ==============================

enum {
	HANDLE_CONFIRM_STEP_TXID = 1000,
	HANDLE_CONFIRM_STEP_FINAL_CONFIRM,
	HANDLE_CONFIRM_STEP_RESPOND,
	HANDLE_CONFIRM_STEP_INVALID,
};

void signTx_handleConfirm_ui_runStep();

// ============================== WITNESS ==============================

enum {
	HANDLE_WITNESS_STEP_WARNING = 1100,
	HANDLE_WITNESS_STEP_DISPLAY,
	HANDLE_WITNESS_STEP_CONFIRM,
	HANDLE_WITNESS_STEP_RESPOND,
	HANDLE_WITNESS_STEP_INVALID,
};

void signTx_handleWitness_ui_runStep();
void endTxStatus(void);
#endif // H_CARDANO_APP_SIGN_TX_UI
